name: test-contracts

on:
  pull_request:
    paths:
      - "contracts/**"
      - ".tool-versions"
      - ".github/workflows/test-contract.yml"
  push:
    branches:
      - main
    paths:
      - "contracts/**"
      - ".tool-versions"
      - ".github/workflows/test-contract.yml"

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  format-check:
    runs-on: ubuntu-latest
    timeout-minutes: 3
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Extract tool versions
        run: |
          SCARB_VERSION=$(grep '^scarb ' .tool-versions | awk '{print $2}')
          echo "SCARB_VERSION=$SCARB_VERSION" >> "$GITHUB_ENV"

      - uses: software-mansion/setup-scarb@v1
        with:
          scarb-version: ${{ env.SCARB_VERSION }}

      - name: Check formatting
        run: |
          cd contracts && scarb fmt --check

  build-and-test:
    needs: format-check
    runs-on: ubuntu-latest
    timeout-minutes: 10
    strategy:
      fail-fast: false
      matrix:
        test-group: [integration, adventurer, other]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Extract tool versions
        run: |
          DOJO_VERSION=$(grep '^dojo ' .tool-versions | awk '{print $2}')
          echo "DOJO_VERSION=$DOJO_VERSION" >> "$GITHUB_ENV"
          SCARB_VERSION=$(grep '^scarb ' .tool-versions | awk '{print $2}')
          echo "SCARB_VERSION=$SCARB_VERSION" >> "$GITHUB_ENV"

      - name: Setup Scarb
        uses: software-mansion/setup-scarb@v1
        with:
          scarb-version: ${{ env.SCARB_VERSION }}

      - name: Cache Dojo binary
        id: cache-dojo
        uses: actions/cache@v4
        with:
          path: ~/dojo-bin
          key: dojo-${{ env.DOJO_VERSION }}-${{ runner.os }}

      - name: Download and install Dojo
        if: steps.cache-dojo.outputs.cache-hit != 'true'
        run: |
          mkdir -p ~/dojo-bin
          curl -L https://github.com/dojoengine/dojo/releases/download/v${{ env.DOJO_VERSION }}/dojo_v${{ env.DOJO_VERSION }}_linux_amd64.tar.gz | tar -xz -C ~/dojo-bin

      - name: Add Dojo to PATH
        run: echo "$HOME/dojo-bin" >> $GITHUB_PATH

      - name: Cache build artifacts
        uses: actions/cache@v4
        with:
          path: |
            contracts/target
            ~/.scarb
          key: dojo-build-${{ runner.os }}-${{ hashFiles('contracts/Scarb.toml', 'contracts/Scarb.lock') }}-${{ matrix.test-group }}
          restore-keys: |
            dojo-build-${{ runner.os }}-${{ hashFiles('contracts/Scarb.toml', 'contracts/Scarb.lock') }}-
            dojo-build-${{ runner.os }}-

      - name: Incremental build check
        id: changes
        run: |
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            BASE_SHA="${{ github.event.pull_request.base.sha }}"
          else
            BASE_SHA="HEAD~1"
          fi
          
          PATHS_TO_CHECK=""
          case ${{ matrix.test-group }} in
            integration)
              PATHS_TO_CHECK="contracts/src/systems/game/"
              ;;
            adventurer)
              PATHS_TO_CHECK="contracts/src/models/adventurer/"
              ;;
            other)
              PATHS_TO_CHECK="contracts/src/models/beast.cairo contracts/src/models/combat.cairo contracts/src/models/loot.cairo contracts/src/models/market.cairo contracts/src/models/obstacle.cairo contracts/src/utils/"
              ;;
          esac
          
          if git diff --quiet $BASE_SHA HEAD -- $PATHS_TO_CHECK; then
            echo "skip=true" >> $GITHUB_OUTPUT
            echo "No changes in ${{ matrix.test-group }}, skipping tests"
          else
            echo "skip=false" >> $GITHUB_OUTPUT
            echo "Changes detected in ${{ matrix.test-group }}, running tests"
          fi

      - name: Build contracts
        if: steps.changes.outputs.skip == 'false'
        run: |
          cd contracts && sozo build

      - name: Run tests for ${{ matrix.test-group }}
        if: steps.changes.outputs.skip == 'false'
        run: |
          cd contracts
          case ${{ matrix.test-group }} in
            integration)
              echo "Running integration tests (31 tests)..."
              sozo test src/systems/game/
              ;;
            adventurer)
              echo "Running adventurer model tests (175 tests)..."
              sozo test src/models/adventurer/
              ;;
            other)
              echo "Running other model and utility tests (76 tests)..."
              sozo test src/models/beast.cairo src/models/combat.cairo src/models/loot.cairo src/models/market.cairo src/models/obstacle.cairo src/utils/
              ;;
          esac